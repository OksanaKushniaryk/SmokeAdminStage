// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const chrome = require('selenium-webdriver/chrome')
const assert = require('assert')

describe('createUser', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    const options = new chrome.Options()
    driver = await new Builder()
      .forBrowser('chrome')
      .setChromeOptions(options)
      .build()
    vars = {}
  })
  afterEach(async function() {
    if (driver) {
      await driver.quit()
    }
  })
  it('createUser', async function() {
    // Login
    await driver.get("https://admin.stage.vcc.hebronsoft.com/auth/login")
    await driver.manage().window().setRect({ width: 1440, height: 900 })
    await driver.findElement(By.id("login-email")).sendKeys("qwe@qwe.com")
    await driver.findElement(By.id("login-pass")).sendKeys("qweQWE123")
    await driver.findElement(By.id("log-btn")).click()

    // Wait for login to complete and navigate to users page
    await driver.wait(until.elementLocated(By.xpath("//div[contains(@class, 'toast')]")), 10000)
    await driver.get("https://admin.stage.vcc.hebronsoft.com/users")

    // Wait for and click Add New User button
    const addUserButton = await driver.wait(
      until.elementLocated(By.xpath("//button[contains(.,'Add New User')]")),
      10000
    )
    await addUserButton.click()

    // Wait for the dialog to be visible
    console.log('Waiting for the dialog to be visible...')
    await driver.wait(until.elementLocated(By.css("mat-dialog-container")), 10000)

    // Fill in user details using formcontrolname attributes
    console.log('Looking for First Name input...')
    const firstNameInput = await driver.wait(
      until.elementLocated(By.css("input[formcontrolname='firstName']")),
      10000,
      'First Name input not found'
    )
    await firstNameInput.sendKeys("Test3")

    await driver.findElement(By.css("input[formcontrolname='lastName']"))
      .sendKeys("Test4")
    
    // Phone input is in a custom component
    await driver.findElement(By.css("input[formcontrolname='phone']"))
      .sendKeys("(380) 671-112256")
    
    await driver.findElement(By.css("input[formcontrolname='email']"))
      .sendKeys("test9@gmail.com")

    // Select role using the mat-select
    console.log('Selecting Manager role...')
    const roleSelect = await driver.findElement(By.id("role"))
    await roleSelect.click()
    
    // Wait for the overlay panel to be visible
    console.log('Waiting for role options...')
    await driver.wait(until.elementLocated(By.css(".mat-select-panel")), 5000)
    
    // Find and click the Manager option in the overlay
    const managerOption = await driver.wait(
      until.elementLocated(By.xpath("//mat-option[contains(., 'Manager')]")),
      5000,
      'Manager option not found'
    )
    await managerOption.click()

    // Create user
    console.log('Clicking Create User button...');
    const createButton = await driver.findElement(By.xpath("//button[contains(.,'Create User')]"))
    await createButton.click();

    // Wait for the table to be present
    console.log('Waiting for users table...');
    await driver.wait(
      until.elementLocated(By.css('p-table')),
      10000,
      'Users table not found'
    );

    // Wait for the new user to appear in the table by email
    const userEmail = "test9@gmail.com";
    console.log(`Looking for user with email: ${userEmail}`);
    const userRow = await driver.wait(
      until.elementLocated(By.xpath(`//tbody[contains(@class, 'p-datatable-tbody')]//a[contains(@href, 'mailto:${userEmail}')]`)),
      10000,
      `User with email ${userEmail} not found in table`
    );

    // Optionally, assert the row is displayed
    const isDisplayed = await userRow.isDisplayed();
    assert.ok(isDisplayed, `User row for ${userEmail} is not displayed`);

    console.log('User creation verified in table!');
  })
})

